//https://leetcode.com/problems/lucky-numbers-in-a-matrix/

class Solution {
    public List<Integer> luckyNumbers (int[][] matrix) {
        List<Integer> minNumber = new ArrayList<Integer>();
        List<Integer> maxNumber = new ArrayList<Integer>();
        List<Integer> luckyNumbers = new ArrayList<Integer>();
                 int m = matrix.length;
         int n = matrix[0].length;
        for(int i =0;i<m; i++){
            int min = Integer. MAX_VALUE;
            for(int j =0;j<n; j++){
                if(matrix[i][j] < min ){
                    min = matrix[i][j];
                    
                }

            }
        
            
            minNumber.add(Integer.valueOf(min));

        }
        for(int i = 0; i < n; i++)
         {
            int max = Integer.MIN_VALUE;
           for(int j = 0; j < m; j++)
           {
             if(matrix[j][i] > max)
             {
               max = matrix[j][i];
             }
           }
           maxNumber.add(Integer.valueOf(max));
         }
        List<Integer> common = new ArrayList<>(minNumber);
        common.retainAll(maxNumber);
        return common;
    }
}
