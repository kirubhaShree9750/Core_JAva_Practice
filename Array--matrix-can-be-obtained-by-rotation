
//https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation/

class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> numMap = new HashMap<Integer,Integer>();
            for(int i =0; i< nums.length; i++){
                int complement = target - nums[i];
                if(numMap.containsKey(complement)){
                    return new int[]{numMap.get(complement), i};
                }
                numMap.put(nums[i], i);
            }
            return new int[]{};
    }
}

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] twoSum = new int[2];
        for(int i =0; i< nums.length; i++){
             for(int j =i+1; j< nums.length; j++){
                   System.out.println(nums[i]+nums[j]);
                       
                    if( nums[i]+nums[j] == target){
                       
                            twoSum[0]= i;
                             twoSum[1]= j;
                    }
                }
        }
        return twoSum;
    }
}
