Collections:
The Collection in Java is a framework that provides an architecture to store and manipulate the group of objects.

Java Collection means a single unit of objects. Java Collection framework provides many interfaces (Set, List, Queue, Deque) and classes (ArrayList, Vector, LinkedList, PriorityQueue, HashSet, LinkedHashSet, TreeSet).

ArrayList:

- Stores duplicate elemet
- Maintains insertion order and non -synchronized
- It;s non-synchronized
- It uses dynamic array to store eleemts
- Java allows random access because array works index basis

Internal implementation:
- Size of arrayList is fixed but you can update size
- input first time set initial size and if you want to add other 4 eleemnts .it will create a new list of new size to accomdate elements.
- it will copy old elements to new elements and delete old eleements 
- so manipulation of array list is slower

LinkedList:
-It uses doubly linked list to store elements
- Maintains insertion order and non-synchronized
- Manipulation is fast
Vector
- Synchronized 
- Uses dynamic array to store elements
Stack
The stack is the subclass of Vector. It implements the last-in-first-out data structure

Array
) ArrayList internally uses a dynamic array to store the elements.	LinkedList internally uses a doubly linked list to store the elements.
2) Manipulation with ArrayList is slow because it internally uses an array. If any element is removed from the array, all the other elements are shifted in memory.	Manipulation with LinkedList is faster than ArrayList because it uses a doubly linked list, so no bit shifting is required in memory.
3) An ArrayList class can act as a list only because it implements List only.	LinkedList class can act as a list and queue both because it implements List and Deque interfaces.
4) ArrayList is better for storing and accessing data.	LinkedList is better for manipulating data.
5) The memory location for the elements of an ArrayList is contiguous.	The location for the elements of a linked list is not contagious.
6) Generally, when an ArrayList is initialized, a default capacity of 10 is assigned to the ArrayList.	There is no case of default capacity in a LinkedList. In LinkedList, an empty list is created when a LinkedList is initialized.
7) To be precise, an ArrayList is a resizable array.	LinkedList implements the doubly linked list of the list interface.

Convert list to Array:
String[] array = fruitList.toArray(new String[fruitList.size()]);    

  Collections.sort(list);
List li = new ArrayList<String>();
li.add("kirubha");
li.add("Shree");
Iterator it = li.iterator();
while(it.next()){
}

Similarities:Array can be multi-dimensional.	ArrayList is always single-dimensional.
Array and ArrayList both are used for storing elements.
Array and ArrayList both can store null values.
They can have duplicate values.
They do not preserve the order of elements.

Array	                      ArrayList
Array is static in size.	ArrayList is dynamic in size.
An array is a fixed-length data structure.	ArrayList is a variable-length data structure. It can be resized itself when needed.
It is mandatory to provide the size of an array while initializing it directly or indirectly.	We can create an instance of ArrayList without specifying its size. Java creates ArrayList of default size.
It performs fast in comparison to ArrayList because of fixed size.	ArrayList is internally backed by the array in Java. The resize operation in ArrayList slows down the performance.
An array can store both objects and primitives type.	We cannot store primitive type in ArrayList. It automatically converts primitive type to object.
We use for loop or for each loop to iterate over an array.	We use an iterator to iterate over ArrayList.
We cannot use generics along with array because it is not a convertible type of array.	ArrayList allows us to store only generic/ type, that's why it is type-safe.
Array provides a length variable which denotes the length of an array.	ArrayList provides the size() method to determine the size of ArrayList.
We can add elements in an array by using the assignment operator.	Java provides the add() method to add elements in the ArrayList.
Array can be multi-dimensional.	ArrayList is always single-dimensional.
